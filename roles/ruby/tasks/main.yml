---
- name        : Make sure "rubyUser" exists
  user        :
    name      : "{{ rubyUser }}"
    shell     : /bin/bash
  become      : yes

- name        : Make sure "rubyUser" is in sudoers
  lineinfile  :
    dest      : /etc/sudoers
    line      : "{{ rubyUser }} ALL=(ALL) NOPASSWD:ALL"
  become      : yes

- name        : Make sure folder "apps" exists
  file        :
    path      : "{{ rubyUserHome }}/apps"
    owner     : "{{ rubyUser }}"
    group     : "{{ rubyUser }}"
    state     : directory
  become      : yes

- name        : Make sure ".ssh" folder exists
  file        :
    path      : "{{ rubyUserHome }}/.ssh"
    owner     : "{{ rubyUser }}"
    group     : "{{ rubyUser }}"
    state     : directory
  become      : yes

- name        : Update config for ssh
  copy        :
    dest      : "{{ rubyUserHome }}/.ssh"
    content   : |
      Host *
        StrictHostKeyChecking no
    owner     : "{{ rubyUser }}"
    group     : "{{ rubyUser }}"
    mode      : 0600
  become      : yes

- name        : Upload keys for GitHub
  copy        : 
    src       : "{{ item.src }}"
    dest      : "{{ item.dest }}"
    mode      : "{{ item.mode }}"
    owner     : "{{ rubyUser }}"
    group     : "{{ rubyUser }}"
  become      : yes
  with_items  :
    - { src: "localGitPub", dest: "{{ rubyUserHome }}/.ssh/id_rsa.pub", mode: 0600 }
    - { src: "localGitPrivate", dest: "{{ rubyUserHome }}/.ssh/id_rsa", mode: 0400 }

- name        : Download and install Nginx
  apt         :
    name      : nginx
    state     : present
  become      : yes

- name: Download and install Postgres
  apt:
    name: "{{ postgres_packages }}"
    state: present
  become: yes
  vars:
    postgres_packages:
      - postgresql
      - postgresql-contrib

- name: Download Node.js to provide JavaScript Runtime functionality for Ruby
  get_url:
    url   : '{{ njUrl }}'
    dest  : "{{ ansible_env.HOME}}/{{ njScript }}"

- name: Add Node.js PPA
  shell     : |
    bash "{{ ansible_env.HOME}}/{{ njScript }}"
  register  : njresult
  become    : yes

- debug: var=njresult

- name: Install Node.js
  apt     :
    name  : nodejs
  become  : yes

- name: Install the dependencies required for rbenv and Ruby
  apt:
    name  : '{{ rubyDependencies }}'
    state : present
  become  : yes

- name: Install rbenv to user home directory
  git:
    repo  : "{{ rbenvRepo }}"
    dest  : "{{ rbenvHomeDir }}"
    accept_hostkey  : yes
    force     : yes
    key_file  : "{{ rbGitAccessKey }}"
  become      : yes
  become_user : "{{ rubyUser }}"

- name: Create folder 'plugins' under .rbenv
  file    :
    name  : "{{ rbenvPluginsDir }}"
    state : directory
  become  : yes
  become_user: "{{ rubyUser }}"

- name: Install 'ruby-build' as a plugin for .rbenv to use "rbenv install"
  git       :
    repo    : "{{ rbenvPluginRepo }}"
    dest    : "{{ rbenvPluginsDir }}/ruby-build"
  become  : yes
  become_user : "{{ rubyUser }}"


- name: Edit .bashrc config
  shell: |
    echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> "{{ rubyUserHome }}"/.bashrc
    echo 'eval "$(rbenv init -)"' >> "{{ rubyUserHome }}"/.bashrc
  become: yes
  become_user: "{{ rubyUser }}"

- name: Install Ruby with rbenv
  shell: |
    $SHELL -lc "{{ rbenvBinDir }}/rbenv install --skip-existing {{ rubyVersion }}"
  become: yes
  become_user: "{{ rubyUser }}"
  register: rubyinstall

- debug: var=rubyinstall